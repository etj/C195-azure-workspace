{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ResourceGroup": {
            "defaultValue": "CREA_TEST_DEPLOY",
            "type": "String"
        },
        "AzureSubscriptionID": {
            "defaultValue": "1cd0a26f-1c2a-48fb-9db5-c5be98e7603b",
            "type": "String"
        },            
        "Redis_crea_name": {
            "defaultValue": "crea-test",
            "type": "String"
        },
        "privateEndpoints_crea_name": {
            "defaultValue": "crea-test",
            "type": "String"
        },
        "virtualMachines_ckan_vm_name": {
            "defaultValue": "ckan-vmtest",
            "type": "String"
        },
        "virtualMachines_ckan_vm_username": {
            "defaultValue": "geosolutions",
            "type": "String"
        },        
        "virtualMachines_ckan_vm_password": {
            "defaultValue": "S3cre3tP4ssw0rd",
            "type": "SecureString"
        },
        "PostgreSQL_username": {
            "defaultValue": "ckan",
            "type": "String"
        },        
        "PostgreSQL_password": {
            "defaultValue": "S3cre3tP4ssw0rd",
            "type": "SecureString"
        },               
        "servers_crea_pg_name": {
            "defaultValue": "crea-pgtest",
            "type": "String"
        },
        "privateEndpoints_crea_pg_name": {
            "defaultValue": "creapostgresql",
            "type": "String"
        },
        "virtualNetworks_privnet01_name": {
            "defaultValue": "privnet01",
            "type": "String"
        },
        "networkInterfaces_ckan_vm195_name": {
            "defaultValue": "ckan-vm195",
            "type": "String"
        },
        "publicIPAddresses_ckan_vm_ip_name": {
            "defaultValue": "ckan-vm-ip",
            "type": "String"
        },
        "storageAccounts_creastorage01_name": {
            "defaultValue": "creastorage01test",
            "type": "String"
        },
        "registries_crearegistry_name": {
            "defaultValue": "crearegistrytest",
            "type": "String"
        },
        "networkSecurityGroups_ckan_vm_nsg_name": {
            "defaultValue": "ckan-vm-nsg",
            "type": "String"
        },
        "privateDnsZones_privatelink_redis_cache_windows_net_name": {
            "defaultValue": "privatelink.redis.cache.windows.net",
            "type": "String"
        },
        "privateDnsZones_privatelink_postgres_database_azure_com_name": {
            "defaultValue": "privatelink.postgres.database.azure.com",
            "type": "String"
        },
        "privateDnsZones_privatelink_solr_azure_com_name": {
            "defaultValue": "privatelink.solr.azure.com",
            "type": "String"
        },
        "solr_Private_Name": {
            "defaultValue": "crea-solr",
            "type": "String"
        },
        // "networkInterfaces_crea_nic_2980809e_067b_47da_b39d_af39d736940d_name": {
        //     "defaultValue": "crea-test.nic.2980809e-067b-47da-b39d-af39d736940d",
        //     "type": "String"
        // },
        // "networkInterfaces_crea_pg_nic_cfb98417_90b9_41be_8ec2_ec3f9d921a04_name": {
        //     "defaultValue": "crea-pg-test.nic.cfb98417-90b9-41be-8ec2-ec3f9d921a04",
        //     "type": "String"
        // },
        "networkProfiles_aci_network_profile_privnet01_default_externalid": {
            "defaultValue": "/subscriptions/1cd0a26f-1c2a-48fb-9db5-c5be98e7603b/resourceGroups/CREA_TEST_DEPLOYMENT/providers/Microsoft.Network/networkProfiles/aci-network-profile-privnet01-default",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2019-07-01",
            "name": "[parameters('Redis_crea_name')]",
            "location": "West Europe",
            "properties": {
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": true,
                "minimumTlsVersion": "1.2",
                "redisConfiguration": {
                    "maxclients": "256",
                    "maxmemory-reserved": "0",
                    "maxfragmentationmemory-reserved": "0",
                    "maxmemory-policy": "volatile-lru",
                    "maxmemory-delta": "0"
                }
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2020-11-01-preview",
            "name": "[parameters('registries_crearegistry_name')]",
            "location": "westeurope",
            "tags": {
                "client": "CREA",
                "project": "C195"
            },
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "properties": {
                "adminUserEnabled": true,
                "policies": {
                    "quarantinePolicy": {
                        "status": "disabled"
                    },
                    "trustPolicy": {
                        "type": "Notary",
                        "status": "disabled"
                    },
                    "retentionPolicy": {
                        "days": 7,
                        "status": "disabled"
                    }
                },
                "encryption": {
                    "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices",
                "zoneRedundancy": "Disabled"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "apiVersion": "2017-12-01",
            "name": "[parameters('servers_crea_pg_name')]",
            "location": "westeurope",
            "sku": {
                "name": "GP_Gen5_2",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "properties": {
                "storageProfile": {
                    "storageMB": 5120,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled",
                    "storageAutogrow": "Disabled"
                },
                "version": "11",
                "sslEnforcement": "Disabled",
                "minimalTlsVersion": "TLSEnforcementDisabled",
                "infrastructureEncryption": "Disabled",
                "publicNetworkAccess": "Enabled",
                "administratorLogin": "[parameters('PostgreSQL_username')]",
                "administratorLoginPassword": "[parameters('PostgreSQL_password')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups_ckan_vm_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_5000",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_solr_azure_com_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 3,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },             
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_postgres_database_azure_com_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_redis_cache_windows_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('publicIPAddresses_ckan_vm_ip_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('virtualMachines_ckan_vm_name')]",
                    "fqdn": "[parameters('virtualMachines_ckan_vm_name')].westeurope.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworks_privnet01_name')]",
            "location": "westeurope",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "serviceEndpoints": [],
                            "delegations": [
                                {
                                    "name": "Microsoft.ContainerInstance.containerGroups",
                                    "properties": {
                                        "serviceName": "Microsoft.ContainerInstance/containerGroups"
                                    }
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "vm",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "westeurope"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[parameters('storageAccounts_creastorage01_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_ckan_vm_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ckan_vm195_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_ckan_vm_name'), '_OsDisk_1_397d118decbd486bbd39df256ea7bd5c')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ckan_vm_name')]",
                    "adminUsername": "[parameters('virtualMachines_ckan_vm_username')]",
                    "adminPassword": "[parameters('virtualMachines_ckan_vm_password')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ckan_vm195_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_solr_azure_com_name'), '/', parameters('solr_Private_Name'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_solr_azure_com_name'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
                }
            }
        },        
        // {
        //     "type": "Microsoft.DBforPostgreSQL/servers/firewallRules",
        //     "apiVersion": "2017-12-01",
        //     "name": "[concat(parameters('servers_crea_pg_name'), '/geosolutions-vpn')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
        //     ],
        //     "properties": {
        //         "startIpAddress": "79.135.50.243",
        //         "endIpAddress": "79.135.50.243"
        //     }
        // },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/securityAlertPolicies",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        // {
        //     "type": "Microsoft.Network/networkInterfaces",
        //     "apiVersion": "2020-05-01",
        //     "name": "[parameters('networkInterfaces_crea_nic_2980809e_067b_47da_b39d_af39d736940d_name')]",
        //     "location": "westeurope",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
        //     ],
        //     "properties": {
        //         "ipConfigurations": [
        //             {
        //                 "name": "redisCache-redisCache.privateEndpoint",
        //                 "properties": {
        //                     "privateIPAddress": "10.0.1.5",
        //                     "privateIPAllocationMethod": "Dynamic",
        //                     "subnet": {
        //                         "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
        //                     },
        //                     "primary": true,
        //                     "privateIPAddressVersion": "IPv4"
        //                 }
        //             }
        //         ],
        //         "dnsSettings": {
        //             "dnsServers": []
        //         },
        //         "enableAcceleratedNetworking": false,
        //         "enableIPForwarding": false
        //     }
        // },
        // {
        //     "type": "Microsoft.Network/networkInterfaces",
        //     "apiVersion": "2020-05-01",
        //     "name": "[parameters('networkInterfaces_crea_pg_nic_cfb98417_90b9_41be_8ec2_ec3f9d921a04_name')]",
        //     "location": "westeurope",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
        //     ],
        //     "properties": {
        //         "ipConfigurations": [
        //             {
        //                 "name": "postgresqlServer-postgresqlServer.privateEndpoint",
        //                 "properties": {
        //                     "privateIPAddress": "10.0.1.6",
        //                     "privateIPAllocationMethod": "Dynamic",
        //                     "subnet": {
        //                         "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
        //                     },
        //                     "primary": true,
        //                     "privateIPAddressVersion": "IPv4"
        //                 }
        //             }
        //         ],
        //         "dnsSettings": {
        //             "dnsServers": []
        //         },
        //         "enableAcceleratedNetworking": false,
        //         "enableIPForwarding": false
        //     }
        // },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('networkSecurityGroups_ckan_vm_nsg_name'), '/Port_5000')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ckan_vm_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "5000",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 310,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('networkSecurityGroups_ckan_vm_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ckan_vm_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'), '/', parameters('privateEndpoints_crea_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.1.6"
                    }
                ]
            }
        },
        // {
        //     "type": "Microsoft.Network/privateDnsZones/A",
        //     "apiVersion": "2018-09-01",
        //     "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/crea-pg')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
        //     ],
        //     "properties": {
        //         "metadata": {
        //             "creator": "created by private endpoint crea-pg with resource guid 5276e628-8a84-4550-81eb-28b83f137ea1"
        //         },
        //         "ttl": 10,
        //         "aRecords": [
        //             {
        //                 "ipv4Address": "10.0.1.6"
        //             }
        //         ]
        //     }
        // },
        // {
        //     "type": "Microsoft.Network/privateDnsZones/SOA",
        //     "apiVersion": "2018-09-01",
        //     "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/@')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
        //     ],
        //     "properties": {
        //         "ttl": 3600,
        //         "soaRecord": {
        //             "email": "azureprivatedns-host.microsoft.com",
        //             "expireTime": 2419200,
        //             "host": "azureprivatedns.net",
        //             "refreshTime": 3600,
        //             "retryTime": 300,
        //             "serialNumber": 1,
        //             "minimumTtl": 10
        //         }
        //     }
        // },
        // {
        //     "type": "Microsoft.Network/privateDnsZones/SOA",
        //     "apiVersion": "2018-09-01",
        //     "name": "[concat(parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'), '/@')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'))]"
        //     ],
        //     "properties": {
        //         "ttl": 3600,
        //         "soaRecord": {
        //             "email": "azureprivatedns-host.microsoft.com",
        //             "expireTime": 2419200,
        //             "host": "azureprivatedns.net",
        //             "refreshTime": 3600,
        //             "retryTime": 300,
        //             "serialNumber": 1,
        //             "minimumTtl": 10
        //         }
        //     }
        // },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_privnet01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "serviceEndpoints": [],
                "delegations": [
                    {
                        "name": "Microsoft.ContainerInstance.containerGroups",
                        "properties": {
                            "serviceName": "Microsoft.ContainerInstance/containerGroups"
                        }
                    }
                ],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_privnet01_name'), '/vm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Sql",
                        "locations": [
                            "westeurope"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                // "protocolSettings": {
                //     "smb": {}
                // },
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        // {
        //     "type": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections",
        //     "apiVersion": "2018-06-01",
        //     "name": "[concat(parameters('servers_crea_pg_name'), '/', parameters('servers_crea_pg_name'), '-5e68a1a5-e830-4054-9344-b7008ab2214a')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]",
        //         "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_crea_pg_name'))]"
        //     ],
        //     "properties": {
        //         "privateEndpoint": {
        //             "id": "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_crea_pg_name'))]"
        //         },
        //         "privateLinkServiceConnectionState": {
        //             "status": "Approved",
        //             "description": "Auto-approved"
        //         }
        //     }
        // },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/privnetrule01')]",
            "dependsOn": [
                    "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]",
                    "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
            ],
            "properties": {
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]",
                "ignoreMissingVnetServiceEndpoint": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/3jg36f462rkj2')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'), '/3jg36f462rkj2')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[parameters('privateEndpoints_crea_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_crea_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_crea_name'), '_3bad0e1d-6bc7-460b-9c98-79b90fecb00d')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/Redis', parameters('Redis_crea_name'))]",
                            "groupIds": [
                                "redisCache"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(parameters('privateEndpoints_crea_name'), '.redis.cache.windows.net')]",
                        "ipAddresses": [
                            "10.0.1.5"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[parameters('privateEndpoints_crea_pg_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_crea_pg_name')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]",
                            "groupIds": [
                                "postgresqlServer"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
                },
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('privateEndpoints_crea_pg_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_crea_pg_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-postgres-database-azure-com",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default/ckanshare')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_creastorage01_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        // {
        //     "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
        //     "apiVersion": "2020-08-01-preview",
        //     "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default/pgshare')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_creastorage01_name'), 'default')]",
        //         "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
        //     ],
        //     "properties": {
        //         "accessTier": "TransactionOptimized",
        //         "shareQuota": 5120,
        //         "enabledProtocols": "SMB"
        //     }
        // },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default/solrshare')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_creastorage01_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_ckan_vm195_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ckan_vm_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ckan_vm_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ckan_vm_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ckan_vm_nsg_name'))]"
                }
            }
        }
    ]
}