{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Redis_crea_name": {
            "defaultValue": "crea-test",
            "type": "String"
        },
        "privateEndpoints_crea_name": {
            "defaultValue": "crea",
            "type": "String"
        },
        "virtualMachines_ckan_vm_name": {
            "defaultValue": "ckan-vmtest",
            "type": "String"
        },
        "virtualMachines_ckan_vm_username": {
            "defaultValue": "geosolutions",
            "type": "String"
        },        
        "virtualMachines_ckan_vm_password": {
            "defaultValue": "S3cre3tP4ssw0rd",
            "type": "String"
        },        
        "servers_crea_pg_name": {
            "defaultValue": "crea-pgtest",
            "type": "String"
        },
        "privateEndpoints_crea_pg_name": {
            "defaultValue": "creapostgresql",
            "type": "String"
        },
        "virtualNetworks_privnet01_name": {
            "defaultValue": "privnet01",
            "type": "String"
        },
        "networkInterfaces_ckan_vm195_name": {
            "defaultValue": "ckan-vm195",
            "type": "String"
        },
        "publicIPAddresses_ckan_vm_ip_name": {
            "defaultValue": "ckan-vm-ip",
            "type": "String"
        },
        "storageAccounts_creastorage01_name": {
            "defaultValue": "creastorage01test",
            "type": "String"
        },
        "registries_crearegistry_name": {
            "defaultValue": "crearegistrytest",
            "type": "String"
        },
        "networkSecurityGroups_ckan_vm_nsg_name": {
            "defaultValue": "ckan-vm-nsg",
            "type": "String"
        },
        "containerGroups_solr_container_name": {
            "defaultValue": "solr-container",
            "type": "String"
        },
        "privateDnsZones_privatelink_solr_azure_com_name": {
            "defaultValue": "privatelink.solr.azure.com",
            "type": "String"
        },
        "privateDnsZones_privatelink_redis_cache_windows_net_name": {
            "defaultValue": "privatelink.redis.cache.windows.net",
            "type": "String"
        },
        "privateDnsZones_privatelink_postgres_database_azure_com_name": {
            "defaultValue": "privatelink.postgres.database.azure.com",
            "type": "String"
        },
        "networkInterfaces_crea_nic_2980809e_067b_47da_b39d_af39d736940d_name": {
            "defaultValue": "crea-test.nic.2980809e-067b-47da-b39d-af39d736940d",
            "type": "String"
        },
        "networkInterfaces_crea_pg_nic_cfb98417_90b9_41be_8ec2_ec3f9d921a04_name": {
            "defaultValue": "crea-pg-test.nic.cfb98417-90b9-41be-8ec2-ec3f9d921a04",
            "type": "String"
        },
        "networkProfiles_aci_network_profile_privnet01_default_externalid": {
            "defaultValue": "/subscriptions/1cd0a26f-1c2a-48fb-9db5-c5be98e7603b/resourceGroups/CREA_TEST_DEPLOYMENT/providers/Microsoft.Network/networkProfiles/aci-network-profile-privnet01-default",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2019-07-01",
            "name": "[parameters('Redis_crea_name')]",
            "location": "West Europe",
            "properties": {
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": true,
                "minimumTlsVersion": "1.2",
                "redisConfiguration": {
                    "maxclients": "256",
                    "maxmemory-reserved": "0",
                    "maxfragmentationmemory-reserved": "0",
                    "maxmemory-policy": "volatile-lru",
                    "maxmemory-delta": "0"
                }
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2019-12-01",
            "name": "[parameters('containerGroups_solr_container_name')]",
            "location": "westeurope",
            "properties": {
                "sku": "Standard",
                "containers": [
                    {
                        "name": "[parameters('containerGroups_solr_container_name')]",
                        "properties": {
                            "image": "[parameters('registries_crearegistry_name')].azurecr.io/crea_ckan_solr:latest",
                            "ports": [
                                {
                                    "protocol": "TCP",
                                    "port": 8983
                                }
                            ],
                            "environmentVariables": [],
                            "resources": {
                                "requests": {
                                    "memoryInGB": 1.5,
                                    "cpu": 2
                                }
                            },
                            "volumeMounts": [
                                {
                                    "name": "azurefile",
                                    "mountPath": "/opt/solr/server/solr/ckan/solr_data"
                                }
                            ]
                        }
                    }
                ],
                "initContainers": [],
                "imageRegistryCredentials": [
                    {
                        "server": "[parameters('registries_crearegistry_name')].azurecr.io",
                        "username": "[parameters('registries_crearegistry_name')]"
                    }
                ],
                "restartPolicy": "Always",
                "ipAddress": {
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": 8983
                        }
                    ],
                    "ip": "10.0.0.4",
                    "type": "Private"
                },
                "osType": "Linux",
                "volumes": [
                    {
                        "name": "azurefile",
                        "azureFile": {
                            "shareName": "solrshare",
                            "storageAccountName": "[parameters('storageAccounts_creastorage01_name')]"
                        }
                    }
                ],
                "networkProfile": {
                    "id": "[parameters('networkProfiles_aci_network_profile_privnet01_default_externalid')]"
                }
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2020-11-01-preview",
            "name": "[parameters('registries_crearegistry_name')]",
            "location": "westeurope",
            "tags": {
                "client": "CREA",
                "project": "C195"
            },
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "properties": {
                "adminUserEnabled": true,
                "policies": {
                    "quarantinePolicy": {
                        "status": "disabled"
                    },
                    "trustPolicy": {
                        "type": "Notary",
                        "status": "disabled"
                    },
                    "retentionPolicy": {
                        "days": 7,
                        "status": "disabled"
                    }
                },
                "encryption": {
                    "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices",
                "zoneRedundancy": "Disabled"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "apiVersion": "2017-12-01",
            "name": "[parameters('servers_crea_pg_name')]",
            "location": "westeurope",
            "sku": {
                "name": "GP_Gen5_2",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "properties": {
                "storageProfile": {
                    "storageMB": 5120,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled",
                    "storageAutogrow": "Disabled"
                },
                "version": "11",
                "sslEnforcement": "Disabled",
                "minimalTlsVersion": "TLSEnforcementDisabled",
                "infrastructureEncryption": "Disabled",
                "publicNetworkAccess": "Enabled",
                "administratorLogin": "[parameters('virtualMachines_ckan_vm_user')]",
                "administratorLoginPassword": "[parameters('virtualMachines_ckan_vm_password')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups_ckan_vm_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_5000",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_postgres_database_azure_com_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_redis_cache_windows_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_solr_azure_com_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 3,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('publicIPAddresses_ckan_vm_ip_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('virtualMachines_ckan_vm_name')]",
                    "fqdn": "[parameters('virtualMachines_ckan_vm_name')].westeurope.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworks_privnet01_name')]",
            "location": "westeurope",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "serviceEndpoints": [],
                            "delegations": [
                                {
                                    "name": "Microsoft.ContainerInstance.containerGroups",
                                    "properties": {
                                        "serviceName": "Microsoft.ContainerInstance/containerGroups"
                                    }
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "vm",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "westeurope"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[parameters('storageAccounts_creastorage01_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_ckan_vm_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ckan_vm195_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_ckan_vm_name'), '_OsDisk_1_397d118decbd486bbd39df256ea7bd5c')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ckan_vm_name')]",
                    "adminUsername": "[parameters('virtualMachines_ckan_vm_user')]",
                    "adminPassword": "[parameters('virtualMachines_ckan_vm_password')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ckan_vm195_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/array_nulls')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_analyze_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.05",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_analyze_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_freeze_max_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "200000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_max_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_multixact_freeze_max_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "400000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_naptime')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "15",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_vacuum_cost_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_vacuum_cost_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_vacuum_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.05",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_vacuum_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/autovacuum_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/azure.replication_support')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "REPLICA",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/backend_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/backslash_quote')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "safe_encoding",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/bgwriter_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/bgwriter_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/bgwriter_lru_maxpages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/bgwriter_lru_multiplier')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/bytea_output')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "hex",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/check_function_bodies')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/checkpoint_completion_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.9",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/checkpoint_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/client_encoding')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "sql_ascii",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/client_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "notice",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/commit_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/commit_siblings')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/connection_throttling')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/constraint_exclusion')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "partition",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/cpu_index_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.005",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/cpu_operator_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.0025",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/cpu_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.01",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/cursor_tuple_fraction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/datestyle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "iso, mdy",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/deadlock_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/debug_print_parse')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/debug_print_plan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/debug_print_rewritten')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/default_statistics_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/default_text_search_config')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "pg_catalog.english",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/default_transaction_deferrable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/default_transaction_isolation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "read committed",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/default_transaction_read_only')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/default_with_oids')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/effective_cache_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "655360",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_bitmapscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_hashagg')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_hashjoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_indexonlyscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_indexscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_material')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_mergejoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_nestloop')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_partitionwise_aggregate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_partitionwise_join')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_seqscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_sort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/enable_tidscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/escape_string_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/exit_on_error')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/extra_float_digits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/force_parallel_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/from_collapse_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/geqo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/geqo_effort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/geqo_generations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/geqo_pool_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/geqo_seed')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/geqo_selection_bias')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "2.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/geqo_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "12",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/gin_fuzzy_search_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/gin_pending_list_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/hot_standby_feedback')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/idle_in_transaction_session_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/intervalstyle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "postgres",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/join_collapse_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/lc_monetary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "English_United States.1252",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/lc_numeric')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "English_United States.1252",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/lo_compat_privileges')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/lock_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_autovacuum_min_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_checkpoints')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_disconnections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_error_verbosity')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "default",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_line_prefix')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "%t-%c-",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_lock_waits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_min_duration_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_min_error_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "error",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "warning",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_replication_commands')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_retention_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_statement_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/log_temp_files')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/logging_collector')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/maintenance_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "131072",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_locks_per_transaction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_parallel_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_parallel_workers_per_gather')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_prepared_transactions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_replication_slots')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_standby_archive_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "30000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_standby_streaming_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "30000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_wal_senders')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/max_wal_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/min_parallel_index_scan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "524288",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/min_parallel_table_scan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "8388608",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/min_wal_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/old_snapshot_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/operator_precedence_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/parallel_leader_participation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/parallel_setup_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/parallel_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_qs.interval_length_minutes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "15",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_qs.max_query_text_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "6000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_qs.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_qs.replace_parameter_placeholders')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_qs.retention_period_in_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "7",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_qs.track_utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_stat_statements.max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_stat_statements.save')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_stat_statements.track')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pg_stat_statements.track_utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pgms_wait_sampling.history_period')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/pgms_wait_sampling.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/postgis.gdal_enabled_drivers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "DISABLE_ALL",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/quote_all_identifiers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/random_page_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "4.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/row_security')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/search_path')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "\"$user\", public",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/seq_page_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "1.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/session_replication_role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "origin",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/shared_preload_libraries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/statement_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/synchronize_seqscans')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/synchronous_commit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/tcp_keepalives_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/tcp_keepalives_idle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/tcp_keepalives_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/temp_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/timezone')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "UTC",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/track_activities')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/track_activity_query_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/track_commit_timestamp')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/track_counts')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/track_functions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/track_io_timing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/transform_null_equals')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_cost_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_cost_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_cost_page_dirty')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_cost_page_hit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_cost_page_miss')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_defer_cleanup_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_freeze_min_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "50000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_freeze_table_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "150000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_multixact_freeze_min_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "5000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/vacuum_multixact_freeze_table_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "150000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/wal_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/wal_receiver_status_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/wal_writer_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/wal_writer_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "128",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/xmlbinary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "base64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/xmloption')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "value": "content",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/azure_maintenance')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/azure_sys')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/ckan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/datastore')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/postgres')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/geosolutions-vpn')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "startIpAddress": "79.135.50.243",
                "endIpAddress": "79.135.50.243"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/securityAlertPolicies",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_crea_nic_2980809e_067b_47da_b39d_af39d736940d_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "redisCache-redisCache.privateEndpoint",
                        "properties": {
                            "privateIPAddress": "10.0.1.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_crea_pg_nic_cfb98417_90b9_41be_8ec2_ec3f9d921a04_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "postgresqlServer-postgresqlServer.privateEndpoint",
                        "properties": {
                            "privateIPAddress": "10.0.1.6",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('networkSecurityGroups_ckan_vm_nsg_name'), '/Port_5000')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ckan_vm_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "5000",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 310,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('networkSecurityGroups_ckan_vm_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ckan_vm_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_solr_azure_com_name'), '/ckan-vm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_solr_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.1.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'), '/crea')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.1.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/crea-pg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint crea-pg with resource guid 5276e628-8a84-4550-81eb-28b83f137ea1"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.1.6"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_solr_azure_com_name'), '/solr')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_solr_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1,
                    "minimumTtl": 10
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1,
                    "minimumTtl": 10
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_solr_azure_com_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_solr_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1,
                    "minimumTtl": 10
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_privnet01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "serviceEndpoints": [],
                "delegations": [
                    {
                        "name": "Microsoft.ContainerInstance.containerGroups",
                        "properties": {
                            "serviceName": "Microsoft.ContainerInstance/containerGroups"
                        }
                    }
                ],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_privnet01_name'), '/vm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Sql",
                        "locations": [
                            "westeurope"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        // {
        //     "type": "Microsoft.Storage/storageAccounts/fileServices",
        //     "apiVersion": "2020-08-01-preview",
        //     "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
        //     ],
        //     "sku": {
        //         "name": "Standard_LRS",
        //         "tier": "Standard"
        //     },
        //     "properties": {
        //         "protocolSettings": {
        //             "smb": {}
        //         },
        //         "cors": {
        //             "corsRules": []
        //         }
        //     }
        // },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        // {
        //     "type": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections",
        //     "apiVersion": "2018-06-01",
        //     "name": "[concat(parameters('servers_crea_pg_name'), '/', parameters('servers_crea_pg_name'), '-5e68a1a5-e830-4054-9344-b7008ab2214a')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]",
        //         "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_crea_pg_name'))]"
        //     ],
        //     "properties": {
        //         "privateEndpoint": {
        //             "id": "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_crea_pg_name'))]"
        //         },
        //         "privateLinkServiceConnectionState": {
        //             "status": "Approved",
        //             "description": "Auto-approved"
        //         }
        //     }
        // },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_crea_pg_name'), '/privnetrule01')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
            ],
            "properties": {
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]",
                "ignoreMissingVnetServiceEndpoint": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/3jg36f462rkj2')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'), '/3jg36f462rkj2')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_redis_cache_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_solr_azure_com_name'), '/solr')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_solr_azure_com_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_privnet01_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[parameters('privateEndpoints_crea_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_crea_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_crea_name'), '_3bad0e1d-6bc7-460b-9c98-79b90fecb00d')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/Redis', parameters('Redis_crea_name'))]",
                            "groupIds": [
                                "redisCache"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(parameters('privateEndpoints_crea_name'), '.redis.cache.windows.net')]",
                        "ipAddresses": [
                            "10.0.1.5"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[parameters('privateEndpoints_crea_pg_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_crea_pg_name')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_crea_pg_name'))]",
                            "groupIds": [
                                "postgresqlServer"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
                },
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('privateEndpoints_crea_pg_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_crea_pg_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-postgres-database-azure-com",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default/ckanshare')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_creastorage01_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default/pgshare')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_creastorage01_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_creastorage01_name'), '/default/solrshare')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_creastorage01_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_creastorage01_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_ckan_vm195_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ckan_vm_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ckan_vm_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ckan_vm_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_privnet01_name'), 'vm')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ckan_vm_nsg_name'))]"
                }
            }
        }
    ]
}